(self.webpackChunkreact_styled_class=self.webpackChunkreact_styled_class||[]).push([[406],{"./src/stories/Index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicUsage:()=>BasicUsage,CSSString:()=>CSSString,WithPseudo:()=>WithPseudo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Index_stories});var react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),postcss=__webpack_require__("./node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/postcss.mjs"),postcss_nested=__webpack_require__("./node_modules/.pnpm/postcss-nested@6.0.1_postcss@8.4.21/node_modules/postcss-nested/index.js"),postcss_nested_default=__webpack_require__.n(postcss_nested);function genCSS(selector,style){if("string"!=typeof style)return genCSSFromObject(selector,style);const css=`${selector} {${style}}`;if(!style.includes("{"))return css;try{return(0,postcss.ZP)([postcss_nested_default()]).process(css).css}catch(error){return css}}function genCSSFromObject(selector,object){const rules=[],decls=Object.entries(object).map((([key,value])=>{if(null==value)return null;if("object"!=typeof value)return`${key}: ${value};`;let childSelector;return childSelector=key.includes("&")?key.replace("&",selector):`${selector} ${key}`,rules.push(genCSSFromObject(childSelector,value)),null})).filter(Boolean);return decls.length&&rules.unshift(`${selector} {\n${decls.join("\n")}\n}`),rules.join("\n")}function createStyleEl(){const style=document.createElement("style");return document.head.appendChild(style),style}const Context=(0,react.createContext)(function createStyledContext(){const contextId=function randId(){return Math.random().toString(36).slice(2)}();let styleIndex=0;const pendingElements=[],styles=[];function unbindComponentId(item,componentId){if(item.usingComponents.delete(componentId),!item.element||item.usingComponents.size)return;pendingElements.push(item.element);const index=styles.indexOf(item);index>=0&&styles.splice(index,1)}return{bindStyle(componentId,style){const key="string"==typeof style?style:JSON.stringify(style),item=styles.find((item=>item.key===key));if(item)return item.usingComponents.add(componentId),item.className;const className=`u-${contextId}-${styleIndex++}`;return styles.push({className,css:genCSS(`.${className}`,style),key,usingComponents:new Set([componentId])}),className},unbindClass(componentId,className){const item=styles.find((item=>item.className===className));item&&unbindComponentId(item,componentId)},unbindComponent(componentId){for(const item of styles.slice())unbindComponentId(item,componentId)},flushStyles(){for(const item of styles)item.element||(item.element=pendingElements.pop()||createStyleEl(),item.element.innerHTML=item.css)}}}());function useStyled(){const componentId=(0,react.useId)(),ctx=function useStyledContext(){return(0,react.useContext)(Context)}(),newClassNames=new Set,activeClassNames=(0,react.useRef)(newClassNames);return(0,react.useLayoutEffect)((()=>{for(const className of Array.from(activeClassNames.current))newClassNames.has(className)||ctx.unbindClass(componentId,className);ctx.flushStyles(),activeClassNames.current=newClassNames})),(0,react.useEffect)((()=>()=>{ctx.unbindComponent(componentId),activeClassNames.current=new Set}),[ctx,componentId]),(...styles)=>styles.map((style=>{const className=ctx.bindStyle(componentId,style);return newClassNames.add(className),className})).join(" ")}var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const StyledComponent=({style})=>{const styled=useStyled();return(0,jsx_runtime.jsx)("pre",{className:styled("font-size: 16px",style),children:"Hello"})};StyledComponent.displayName="StyledComponent";const Index_stories={title:"useStyled",component:StyledComponent},BasicUsage={args:{style:{color:"gray"}}},WithPseudo={args:{style:{color:"gray","&:hover":{color:"orange"},"&::after":{content:'", pseudo!"'}}}},CSSString={args:{style:'\n      color: gray;\n      &:hover {\n        color: orange;\n      }\n      &::after {\n        content: ", pseudo!";\n      }\n    '}},__namedExportsOrder=["BasicUsage","WithPseudo","CSSString"];BasicUsage.parameters={...BasicUsage.parameters,docs:{...BasicUsage.parameters?.docs,source:{originalSource:"{\n  args: {\n    style: {\n      color: 'gray'\n    }\n  }\n}",...BasicUsage.parameters?.docs?.source}}},WithPseudo.parameters={...WithPseudo.parameters,docs:{...WithPseudo.parameters?.docs,source:{originalSource:"{\n  args: {\n    style: {\n      color: 'gray',\n      '&:hover': {\n        color: 'orange'\n      },\n      '&::after': {\n        content: '\", pseudo!\"'\n      }\n    }\n  }\n}",...WithPseudo.parameters?.docs?.source}}},CSSString.parameters={...CSSString.parameters,docs:{...CSSString.parameters?.docs,source:{originalSource:'{\n  args: {\n    style: `\n      color: gray;\n      &:hover {\n        color: orange;\n      }\n      &::after {\n        content: ", pseudo!";\n      }\n    `\n  }\n}',...CSSString.parameters?.docs?.source}}}},"?4d02":()=>{},"?4193":()=>{},"?395f":()=>{},"?3c61":()=>{},"?f8f4":()=>{}}]);